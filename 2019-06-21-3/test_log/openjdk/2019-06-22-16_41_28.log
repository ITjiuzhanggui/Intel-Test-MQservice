openjdk/openjdk.sh
[openjdk] 
[openjdk] == openjdk unit test ==
[openjdk] [INFO] generating benchmarks.jar by maven tool first:
[openjdk] 
[openjdk] [INFO] Test docker hub official image first:
[openjdk] 
# JMH version: 1.21
# VM version: JDK 1.8.0_212, OpenJDK 64-Bit Server VM, 25.212-b04
# VM invoker: /usr/local/openjdk-8/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testMethod

# Run progress: 0.00% complete, ETA 00:08:20
# Fork: 1 of 5
# Warmup Iteration   1: 2657456490.626 ops/s
# Warmup Iteration   2: 2660943642.714 ops/s
# Warmup Iteration   3: 2657393271.796 ops/s
# Warmup Iteration   4: 2664491252.569 ops/s
# Warmup Iteration   5: 2660253877.969 ops/s
Iteration   1: 2663187024.309 ops/s
Iteration   2: 2664339592.182 ops/s
Iteration   3: 2665214655.175 ops/s
Iteration   4: 2660106545.507 ops/s
Iteration   5: 2661909518.211 ops/s

# Run progress: 20.00% complete, ETA 00:06:41
# Fork: 2 of 5
# Warmup Iteration   1: 2662051931.967 ops/s
# Warmup Iteration   2: 2660949009.478 ops/s
# Warmup Iteration   3: 2602666498.152 ops/s
# Warmup Iteration   4: 2626160630.934 ops/s
# Warmup Iteration   5: 2667301364.882 ops/s
Iteration   1: 2665167703.993 ops/s
Iteration   2: 2656697382.822 ops/s
Iteration   3: 2661440039.793 ops/s
Iteration   4: 2656478343.869 ops/s
Iteration   5: 2658712275.891 ops/s

# Run progress: 40.00% complete, ETA 00:05:00
# Fork: 3 of 5
# Warmup Iteration   1: 2661219864.553 ops/s
# Warmup Iteration   2: 2659984389.036 ops/s
# Warmup Iteration   3: 2658879225.274 ops/s
# Warmup Iteration   4: 2659210956.947 ops/s
# Warmup Iteration   5: 2661716551.081 ops/s
Iteration   1: 2663238253.495 ops/s
Iteration   2: 2666773451.816 ops/s
Iteration   3: 2660660757.481 ops/s
Iteration   4: 2662456016.699 ops/s
Iteration   5: 2663044562.372 ops/s

# Run progress: 60.00% complete, ETA 00:03:20
# Fork: 4 of 5
# Warmup Iteration   1: 2657990973.459 ops/s
# Warmup Iteration   2: 2663905265.945 ops/s
# Warmup Iteration   3: 2664679276.959 ops/s
# Warmup Iteration   4: 2661861164.071 ops/s
# Warmup Iteration   5: 2660498647.730 ops/s
Iteration   1: 2661316791.353 ops/s
Iteration   2: 2666831262.123 ops/s
Iteration   3: 2662531245.230 ops/s
Iteration   4: 2483548400.715 ops/s
Iteration   5: 2664622390.430 ops/s

# Run progress: 80.00% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 2657194752.643 ops/s
# Warmup Iteration   2: 2654861953.950 ops/s
# Warmup Iteration   3: 2658383091.521 ops/s
# Warmup Iteration   4: 2663035536.561 ops/s
# Warmup Iteration   5: 2659544029.273 ops/s
Iteration   1: 2665168923.562 ops/s
Iteration   2: 2662025462.952 ops/s
Iteration   3: 2658675843.991 ops/s
Iteration   4: 2664604042.285 ops/s
Iteration   5: 2654951388.839 ops/s


Result "org.sample.MyBenchmark.testMethod":
  2654948075.004 ±(99.9%) 26851417.728 ops/s [Average]
  (min, avg, max) = (2483548400.715, 2654948075.004, 2666831262.123), stdev = 35845874.441
  CI (99.9%): [2628096657.276, 2681799492.731] (assumes normal distribution)


# Run complete. Total time: 00:08:21

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                Mode  Cnt           Score          Error  Units
MyBenchmark.testMethod  thrpt   25  2654948075.004 ± 26851417.728  ops/s
[openjdk] [INFO] Test clear docker image:
[openjdk] 
# JMH version: 1.21
# VM version: JDK 1.8.0-internal, OpenJDK 64-Bit Server VM, 25.71-b00
# VM invoker: /usr/lib/jvm/java-1.8.0-openjdk/jre/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: org.sample.MyBenchmark.testMethod

# Run progress: 0.00% complete, ETA 00:08:20
# Fork: 1 of 5
# Warmup Iteration   1: 2654993124.196 ops/s
# Warmup Iteration   2: 2660926525.659 ops/s
# Warmup Iteration   3: 2668240859.982 ops/s
# Warmup Iteration   4: 2602809883.004 ops/s
# Warmup Iteration   5: 2654827768.723 ops/s
Iteration   1: 2659960093.385 ops/s
Iteration   2: 2665025515.013 ops/s
Iteration   3: 2666476210.250 ops/s
Iteration   4: 2664577549.665 ops/s
Iteration   5: 2662885214.617 ops/s

# Run progress: 20.00% complete, ETA 00:06:41
# Fork: 2 of 5
# Warmup Iteration   1: 2658868396.974 ops/s
# Warmup Iteration   2: 2657566342.872 ops/s
# Warmup Iteration   3: 2658132818.286 ops/s
# Warmup Iteration   4: 2611243087.579 ops/s
# Warmup Iteration   5: 2665828723.141 ops/s
Iteration   1: 2660493664.254 ops/s
Iteration   2: 2662606944.369 ops/s
Iteration   3: 2664150821.334 ops/s
Iteration   4: 2652086299.768 ops/s
Iteration   5: 2609787637.083 ops/s

# Run progress: 40.00% complete, ETA 00:05:01
# Fork: 3 of 5
# Warmup Iteration   1: 2657077483.409 ops/s
# Warmup Iteration   2: 2661332552.268 ops/s
# Warmup Iteration   3: 2663689455.289 ops/s
# Warmup Iteration   4: 2656709539.768 ops/s
# Warmup Iteration   5: 2660601556.713 ops/s
Iteration   1: 2663988866.134 ops/s
Iteration   2: 2661241799.341 ops/s
Iteration   3: 2665162465.738 ops/s
Iteration   4: 2659335129.286 ops/s
Iteration   5: 2664054836.060 ops/s

# Run progress: 60.00% complete, ETA 00:03:20
# Fork: 4 of 5
# Warmup Iteration   1: 2661692421.754 ops/s
# Warmup Iteration   2: 2664422482.804 ops/s
# Warmup Iteration   3: 2666872422.199 ops/s
# Warmup Iteration   4: 2665067286.899 ops/s
# Warmup Iteration   5: 2665369368.030 ops/s
Iteration   1: 2666835612.156 ops/s
Iteration   2: 2668999124.427 ops/s
Iteration   3: 2655360351.917 ops/s
Iteration   4: 2620609884.782 ops/s
Iteration   5: 2663569445.644 ops/s

# Run progress: 80.00% complete, ETA 00:01:40
# Fork: 5 of 5
# Warmup Iteration   1: 2659761388.385 ops/s
# Warmup Iteration   2: 2663006478.373 ops/s
# Warmup Iteration   3: 2661682228.794 ops/s
# Warmup Iteration   4: 2663945259.408 ops/s
# Warmup Iteration   5: 2661098337.998 ops/s
Iteration   1: 2664892028.997 ops/s
Iteration   2: 2659954798.355 ops/s
Iteration   3: 2658960542.975 ops/s
Iteration   4: 2658707725.251 ops/s
Iteration   5: 2664606477.319 ops/s


Result "org.sample.MyBenchmark.testMethod":
  2658573161.525 ?(99.9%) 10230045.051 ops/s [Average]
  (min, avg, max) = (2609787637.083, 2658573161.525, 2668999124.427), stdev = 13656817.459
  CI (99.9%): [2648343116.474, 2668803206.576] (assumes normal distribution)


# Run complete. Total time: 00:08:21

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                Mode  Cnt           Score          Error  Units
MyBenchmark.testMethod  thrpt   25  2658573161.525 ? 10230045.051  ops/s
